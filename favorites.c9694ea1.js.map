{"mappings":"oeAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,SAoBO,SAASE,EAAyBC,GACvC,IAAIC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQL,IAE3C,OADAM,QAAQC,IAAIN,GACLA,C,CAGF,SAASO,EAAYP,GAC1B,SAAKA,GAAiC,SAAzBA,EAAKQ,YAAYC,K,CCRhC,SAASC,EAAiBC,GA6BxB,OA5BAC,uBAAyB,GAEFD,EAAUE,QAAO,CAACC,EAAQC,KAC/C,IAAIC,GAASC,YAAc,GAAKC,SAC5BC,EAAMF,YAAcC,SACxB,GAAIH,GAASC,GAASD,EAAQI,EAAK,OAAO,CAAI,IAG/BC,SAAQN,IACvBF,wBAA0B,gDAElBE,EAAOO,qKAOaP,EAAOQ,2CACTR,EAAOS,kGApCrC,SAAqBC,GACnB,IAAIC,EAAQ,GACZD,EAASE,KAAKC,MAAMH,EAAS,KAE7BnB,QAAQC,IAAIkB,GAEZ,IAAK,IAAII,EAAIJ,EAAQI,GAAK,EAAGA,IAC3BH,EAAMI,KACJ,4EAKJ,OAFAJ,EAAQA,EAAMK,KAAK,KAEZL,C,CAyBiCM,CAAYjB,EAAOkB,qGAIrD,IAGCpB,sB,CAGMqB,eAAAC,EAA+BC,EAAO,GACnDC,EAAeD,GACfE,EAAeF,GAEf,MAAMxB,EAAYb,EAAyB,aAEtCS,EAAYI,IAIf2B,yBAA2B5B,EAAiBC,GAC5C4B,SAASC,eAAe,aAAaC,UAAYH,0BAJjDC,SAASC,eAAe,aAAaC,UACnC,gC,CCxCC,SAASC,IAGd,GAFA/B,UAAYb,EAAyB,cAEhCS,EAAYI,WACf,OAAO,EAGT,IACE,OAAOe,KAAKiB,KAAKhC,UAAUiC,OAAS1B,S,CACpC,MAAO2B,GAEP,OADAxC,QAAQC,IAAIuC,GACL,C,EAIJ,SAAST,EAAeD,GAE3BW,WAAWC,MAAMC,WADN,IAATb,EAC4B,SAEA,S,CAI3B,SAASE,EAAeF,GACL,IAApBO,KAAyBP,IAASO,IACpCO,WAAWF,MAAMC,WAAa,SAE9BC,WAAWF,MAAMC,WAAa,S,CC1ClCE,QAAS,EACTC,SAAW,iDACXlC,YAAc,EACdC,SAAoB,EHEbe,iBAOP,IAAgClC,EAAKC,EANnCoD,sBAPKnB,iBACL,MAAMoB,QAAiBxD,EAAAyD,QAAMC,IAAI,GAAGJ,4BAEpC,OADA9C,QAAQC,IAAI+C,EAASrD,MACdqD,EAASrD,I,CAIQwD,GAMMzD,EALP,YAKYC,EALCoD,gBAMpCjD,aAAasD,QAAQ1D,EAAKE,KAAKyD,UAAU1D,G,CGP3C,GAEAkC,IAEAK,SACGoB,cAAc,eACdC,iBAAiB,SDbb,WACD3C,YAAc,IAChBA,cACAiB,EAAgBjB,a,ICUuB,GAC3CsB,SACGoB,cAAc,eACdC,iBAAiB,SDTb,WACLjD,UAAYb,EAAyB,aAEjCmB,YAAcC,SAAWP,UAAUiC,SACrC3B,cACAiB,EAAgBjB,a,ICImB","sources":["src/favorites.js","src/js/favorites/data.js","src/js/favorites/render.js","src/js/favorites/nav.js","src/js/favorites/favorites.js"],"sourcesContent":["import './js/home/header';\nimport './js/favorites/favorites';\n\n\n\n\n\n","import axios from 'axios';\n\n// Comment out start\nexport async function getData() {\n  const response = await axios.get(`${BASE_URL}/recipes/popular`);\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFavoritesRecipes() {\n  favoriteRecipes = await getData();\n  pushDataToLocalStorage('favorites', favoriteRecipes);\n}\n\n// Comment out end\n\nfunction pushDataToLocalStorage(key, data) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n\nexport function pullDataFromLocalStroage(key) {\n  let data = JSON.parse(localStorage.getItem(key));\n  console.log(data);\n  return data;\n}\n\nexport function isDataValid(data) {\n  if (!data || data.constructor.name != 'Array') {\n    return false;\n  } else {\n    return true;\n  }\n}\n","import { isDataValid, pullDataFromLocalStroage } from './data';\nimport { showNextButton, showPrevButton } from './nav';\n\nfunction renderStars(rating) {\n  let stars = [];\n  rating = Math.round(rating / 100);\n\n  console.log(rating);\n\n  for (let i = rating; i >= 1; i--)\n    stars.push(\n      '<i class=\"fa fa-star\" aria-hidden=\"true\" style=\"color: gold;\"></i>&nbsp;'\n    );\n\n  stars = stars.join(' ');\n\n  return stars;\n}\n\nfunction favoritesPerPage(favorites) {\n  renderFavoritesPerPage = '';\n\n  let favoritesPerPage = favorites.filter((recipe, index) => {\n    let start = (currentPage - 1) * pageSize;\n    let end = currentPage * pageSize;\n    if (index >= start && index < end) return true;\n  });\n\n  favoritesPerPage.forEach(recipe => {\n    renderFavoritesPerPage += `<li class=\"favor-item\">\n    <img\n      src=${recipe.preview}\n      class=\"img-favor\"\n      alt=\"preview\"\n      width=\"335\"\n      height=\"335\"\n    />\n    <div class=\"card-favor\">\n      <h2 class=\"title-favor\">${recipe.title}</h2>\n      <p class=\"desc-favor\">${recipe.description}</p>\n      <div class=\"rating-btn-favor\">\n        <p class=\"rating-favor\">Rating: ${renderStars(recipe.popularity)}</p>\n        <btn class=\"btn-favor\">See recipe</btn>\n      </div>\n    </div>\n  </li>`;\n  });\n\n  return renderFavoritesPerPage;\n}\n\nexport default async function renderFavorites(page = 1) {\n  showPrevButton(page);\n  showNextButton(page);\n\n  const favorites = pullDataFromLocalStroage('favorites');\n\n  if (!isDataValid(favorites)) {\n    document.getElementById('favorList').innerHTML =\n      '<li>LocalStorage is empty</li>';\n  } else {\n    renderedFavoritesPerPage = favoritesPerPage(favorites);\n    document.getElementById('favorList').innerHTML = renderedFavoritesPerPage;\n  }\n}\n","import { isDataValid, pullDataFromLocalStroage } from './data';\nimport renderFavorites from './render';\n\nexport function previousPage() {\n  if (currentPage > 1) {\n    currentPage--;\n    renderFavorites(currentPage);\n  }\n}\n\nexport function nextPage() {\n  favorites = pullDataFromLocalStroage('favorites');\n\n  if (currentPage * pageSize < favorites.length) {\n    currentPage++;\n    renderFavorites(currentPage);\n  }\n}\n\nexport function numberOfPages() {\n  favorites = pullDataFromLocalStroage('favorites');\n\n  if (!isDataValid(favorites)) {\n    return 0;\n  }\n\n  try {\n    return Math.ceil(favorites.length / pageSize);\n  } catch (e) {\n    console.log(e);\n    return 0;\n  }\n}\n\nexport function showPrevButton(page) {\n  if (page === 1) {\n    prevButton.style.visibility = 'hidden';\n  } else {\n    prevButton.style.visibility = 'visible';\n  }\n}\n\nexport function showNextButton(page) {\n  if (numberOfPages() === 0 || page === numberOfPages()) {\n    nextButton.style.visibility = 'hidden';\n  } else {\n    nextButton.style.visibility = 'visible';\n  }\n}\n","import { previousPage, nextPage, showPrevButton, showNextButton } from './nav';\nimport renderFavorites from './render';\nimport { getFavoritesRecipes } from './data';\n\nmobile = true;\nBASE_URL = 'https://tasty-treats-backend.p.goit.global/api';\ncurrentPage = 1;\npageSize = mobile ? 1 : 12;\n\n// Comment out this\ngetFavoritesRecipes();\n\nrenderFavorites();\n\ndocument\n  .querySelector('#prevButton')\n  .addEventListener('click', previousPage, false);\ndocument\n  .querySelector('#nextButton')\n  .addEventListener('click', nextPage, false);\n"],"names":["parcelRequire","$2shzp","$4cef7bc767d7729f$export$c8d5d6745e721803","key","data","JSON","parse","localStorage","getItem","console","log","$4cef7bc767d7729f$export$29c430453b4c95e0","constructor","name","$95dad80a710c01ba$var$favoritesPerPage","favorites","renderFavoritesPerPage","filter","recipe","index","start","currentPage","pageSize","end","forEach","preview","title","description","rating","stars","Math","round","i","push","join","$95dad80a710c01ba$var$renderStars","popularity","async","$95dad80a710c01ba$export$2e2bcd8739ae039","page","$2bba533e39574116$export$e6e43e4966caa788","$2bba533e39574116$export$11f4f0ef51297b25","renderedFavoritesPerPage","document","getElementById","innerHTML","$2bba533e39574116$export$accafa1c3f646231","ceil","length","e","prevButton","style","visibility","nextButton","mobile","BASE_URL","favoriteRecipes","response","default","get","$4cef7bc767d7729f$export$7a171f172be0782e","setItem","stringify","querySelector","addEventListener"],"version":3,"file":"favorites.c9694ea1.js.map"}